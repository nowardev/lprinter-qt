#!/bin/bash -x
#version 0.5.2
#installation
#copy the script in /usr/bin and give chmod +x to it
#copy the desktop file this on $HOME/.kde/share/kde4/services
#
#license gpl 
#    This program is free software: you can redistribute it and/or modify
    #it under the terms of the GNU General Public License as published by
    #the Free Software Foundation, either version 3 of the License, or
    #any later version.

    #This program is distributed in the hope that it will be useful,
    #but WITHOUT ANY WARRANTY; without even the implied warranty of
    #MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    #GNU General Public License for more details.

    #You should have received a copy of the GNU General Public License
    #along with this program.  If not, see <http://www.gnu.org/licenses/>
#NowardevTeam 2011

configurationfile="$HOME/.lprinter-qt.cfg"
listfiles="$HOME/.lprinter-qt.lst"
 
 


lockdir=/tmp/lprinter-qt.lock
 if mkdir "$lockdir"
 then
     echo >&2 "successfully acquired lock"

     # Remove lockdir when the script finishes, or when it receives a signal
     trap 'rm -rf "$lockdir"' 0    # remove directory when script finishes
     trap "exit 2" 1 2 3 15        # terminate script when receiving signal

     # Optionally create temporary files in this directory, because
     # they will be removed automatically:
     tmpfile=$lockdir/filelist

 else
     echo >&2 "cannot acquire lock, giving up on $lockdir"
     exit 0
 fi


checkprogram(){

program[0]=jpegtoppm
program[1]=pngtoppm
program[2]=html2ps
program[3]=giftopnm
program[4]=bpmtoppm
program[5]=tifftopnm
program[6]=kdialog
#program[7]=ffmpeg2theora


for program in "${program[@]}"; 
do if ! type -p "$program" >/dev/null;
 then echo "$program not found; PLEASE INSTALL IT" >&2
echo "error exiting..." >&2
echo 
echo "You need of xrandr and..."
echo "For debian : ${program[@]}  "
 exit 1; 
fi; done

}


functionhelp(){

echo "this script provide to print files under kubuntu "
version=0.2
echo 
echo USAGE
echo 
echo "lprinter-qt file"
echo 
echo "nowardev 2011"
}


functionsavesettings(){

copies=$(kdialog --title $"Number of copies" --textinputbox $"Number of copies" 1 --default 1 )

landscape=$(kdialog -title $"Orientation" --combobox $"Orientation" Landscape Normal  --default Normal)

fitplot=$(kdialog -title $"fitplot" --combobox $"fitplot"  Fitplot Normal --default Normal)

  
echo "[copies]: $copies" >$configurationfile
echo >>$configurationfile
echo "[landscape]: $landscape  ">> $configurationfile
echo >>$configurationfile
echo "[fitplot]:  $fitplot "  >>$configurationfile
 

}





functionprint(){

lp $parameters "$1"


}

functionprintoffice(){

libreoffice --invisible  --norestore -p $1

}

functiondisplay(){

case $1 in 
*.png | *.jpg | *.jpeg | *.tiff | *.gif | *.bmp)
 
dislay "$1"  
;;

*.ps)

gs "$1"
;;

*.txt | *.cfg | *.lst)

kate "$1"
;;

*.pdf | *.ps)
okular $1
;;

esac
}



functiondetectfile(){


name="${1##*/}"
name="${name%%.*}" 
name=$(echo "$name" | tr ' ' _) #remove space from name causing  ambiguous redirect
case $1 in 
*.pdf | *.ps)
toprintfile="$1"

if [[ $a == 0 ]] ; then functiondisplay $toprintfile ; fi  
 functionprint "$toprintfile"
;;
*.png)
toprintfile="/tmp/$name.pnm"

$(pngtopnm "$1" > $toprintfile)
if [[ $a == 0 ]] ; then functiondisplay $toprintfile ; fi  
 functionprint "$toprintfile"
;;

*.jpg | *.jpeg)
toprintfile="/tmp/$name.pnm"
jpegtopnm "$1" >$toprintfile
if [[ $a == 0 ]] ; then functiondisplay $toprintfile ; fi 
 functionprint "$toprintfile"
;;

*.tiff)
toprintfile="/tmp/$name.pnm"
tifftopnm "$1" >$toprintfile
if [[ $a == 0 ]] ; then functiondisplay $toprintfile ; fi  
 functionprint "$toprintfile"
;;

*.gif)
toprintfile="/tmp/$name.pnm"
giftopnm "$1" >$toprintfile
if [[ $a == 0 ]] ; then functiondisplay $toprintfile ; fi 
 functionprint "$toprintfile"
;;

*.bmp)
toprintfile="/tmp/$name.ppm"
bmptoppm "$1" >$toprintfile

if [[ $a == 0 ]] ; then functiondisplay $toprintfile ; fi 
 functionprint "$toprintfile"
;;


*.html | *.htm)
toprintfile="/tmp/$name.ps"
html2ps "$1"  >$toprintfile
if [[ $a == 0 ]] ; then functiondisplay $toprintfile ; fi 
 functionprint "$toprintfile"
;;

*.txt | *.cfg | *.lst )
toprintfile="$1"
if [[ $a == 0 ]] ; then functiondisplay $toprintfile "$toprintfile" ; fi 
 functionprintoffice "$toprintfile"
;;

esac


}



functioninteractive(){

copies=$(awk '/[copies]: /{print $2}' $configurationfile) 
landscape=$(awk '/[landscape]: /{print $2}' $configurationfile)
fitplot=$(awk '/[fitplot]: /{print $2}' $configurationfile)




if [[ -z $copies || -z $landscape || -z $fitplot  ]] ;then 

copies=$(kdialog --title $"Number of copies" --textinputbox $"Number of copies" 1 --default 1 )

landscape=$(kdialog -title $"Orientation" --combobox $"Orientation" Landscape Normal  --default Normal)

fitplot=$(kdialog -title $"fitplot" --combobox $"fitplot"  Fitplot Normal --default Normal)

else

echo found stuff

fi


#if [[ -z $copies ]] ; then 
expr "$copies + 1" 2> /dev/null
if [ $? = 0 ]; then
copies="-n $copies"
else
copies="-n 1"
fi



 

if  [[  $landscape == Landscape ]]; then 
plandscape="-o landscape"
else 
plandscape=""
fi

if  [[  $fitplot == Fitplot ]]; then 
pfitplot="-o fitplot"
else
pfitplot=""
fi

parameters="$plandscape $pfitplot $copies"
while read line
    do
functiondetectfile "$line"
done<$listfiles 
}



functioninteractiveeach(){




copies=$(kdialog --title $"Number of copies" --textinputbox $"Number of copies" 1 --default 1 )

landscape=$(kdialog -title $"Orientation" --combobox $"Orientation" Landscape Normal  --default Normal)

fitplot=$(kdialog -title $"fitplot" --combobox $"fitplot"  Fitplot Normal --default Normal)


#if [[ -z $copies ]] ; then 
expr "$copies + 1" 2> /dev/null
if [ $? = 0 ]; then
copies="-n $copies"
else
copies="-n 1"
fi



 

if  [[  $landscape == Landscape ]]; then 
plandscape="-o landscape"
else 
plandscape=""
fi

if  [[  $fitplot == Fitplot ]]; then 
pfitplot="-o fitplot"
else
pfitplot=""
fi
parameters="$plandscape $pfitplot $copies"
functiondetectfile $line
 
}



functionaddfiles(){

echo $"file to enqueqe $1"

echo "$1" >>  $listfiles
  
}



case "$1" in 



add-files)
 
if [[ ! -e "$2" ]] ; then 
kdialog --msgbox $"something of wrong this file  $2 doesn't exist? :S this is strange" 
else 
functionaddfiles "$2"
fi  
;;


show-files)
if [[ -e $listfiles ]] ; then
      kate $listfiles
else
    kdialog --title $"Dolphin video converter Error" --msgbox $"This file doesn't exist ~/.lprinter-qt.lst before you have to add files to print list" 
fi
;;

delete-list)
if [[ -e $listfiles ]] ; then
      rm  $listfiles
else
    kdialog --title 4"Dolphin video converter Error" --msgbox $"This file doesn't exist ~/.lprinter-qt.lst so... i can't delete" 
fi
;;


interactive-each)
a=$(kdialog --yesno $"Do you want see your file before to print?")
while read line
    do

functioninteractiveeach "$line"
done<$listfiles

;;

interactive-all)
functioninteractive
;;

printer-settings)
kde-open http://localhost:631/printers
;;

help)
printer=$(lpoptions | awk -F'printers/' '{print $2}')
error=$(echo ciao | lp )
if [[ $error =~ "lp: Error - no default destination available."  ]]; then 
kdialog --msgbox $"Error - no default destination available 
please set your printer in this way if your printer is :

hp_photosmart_7700_series

type in konsole 

lpoptions -d “hp_photosmart_7700_series”
 
i have detected that your printer is 

$printer

 "
else 

kdialog --msgbox $"i have detected that your printer is 

$printer

it should work :S ; try to type this on konsole 

echo ciao | lp 

investigate :S

 "
fi
;;


esac



 
  